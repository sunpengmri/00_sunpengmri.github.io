1. docker: sudo apt  install docker.io
	sudo docker ps 
	docker stop

2. change dns and host to access nvidia
	
	sudo vim /etc/systemd/resolved.conf
	[Resolve]
	DNS=114.114.114.114
	DNS=8.8.8.8
	#FallbackDNS=
	#Domains=
	#LLMNR=no
	#MulticastDNS=no
	#DNSSEC=no
	#Cache=yes
	systemctl restart systemd-resolved.service
	systemd-resolve --status


	sudo vim /etc/hosts
	185.199.111.153 nvidia.github.io
	185.199.108.153 nvidia.github.io
	sudo systemd-resolve --flush-caches

3. CUDA 11.3 and CUDNN

	wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
	sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
	wget https://developer.download.nvidia.com/compute/cuda/11.4.0/local_installers/cuda-repo-ubuntu2004-11-4-local_11.4.0-470.42.01-1_amd64.deb
	sudo dpkg -i cuda-repo-ubuntu2004-11-4-local_11.4.0-470.42.01-1_amd64.deb
	sudo apt-key add /var/cuda-repo-ubuntu2004-11-4-local/7fa2af80.pub
	sudo apt-get update
	sudo apt-get -y install cuda

	https://developer.nvidia.com/cudnn

		到目前为止pytorch好像还是只支持到10.2 / 11.3，可以考虑在linux/其他os下安装多版本cuda并进行切换举例： Ubuntu下可以再装个11.3/11.2版本的cuda，以支持pytorch gpu1.去nvidia官网下载，并安装对应版本的cuda，并进行配置
		2.cuda symbol link的选择（首次安装，选y，安装额外的版本，选n）
		3.如果需要切换cuda version，进入/usr/local，移除cuda这个symbolic link，然后再重新链接需要的versioncd /usr/local

		sudo rm -rf cuda
		sudo ln -s /usr/local/cuda-11.3 /usr/local/cuda
		4.安装对应cuda版本的pytorch，在官网选择相应的条件，并复制安装命令
		5.测试pytorch以及pytorch_gpu

5. pytorch: in anaconda(base) and monai

6. tensorflow: in anaconda(tensorflow)
4. Nvidia Clara (/home/peng/github/01_AI/05_clara/clara-train-examples)
	a. docker install and hosts setup
	b. using script to install Docker in script/installDocker.sh
	c. using clara-train-examples as a start
	d. start docker and jupyter script/startClaraTrainNoteBooks.sh
	e. in Jupyter: start terminal, then: AIAA start -w /claraDevDay/AIAA/workspace/ --engine AIAA &
	f. using jupyter notebook and slicer3D
	h. finish: 1. delete model; 2. ./stopClaraTrainNoteBooks.sh 
	i. load model: 
		1. !curl -X PUT "http://127.0.0.1:5000/admin/model/clara_pt_liver_and_tumor_ct_segmentation" -F 'ngc={"path":"nvidia/med/clara_pt_liver_and_tumor_ct_segmentation","version":"1"}'
		2. modelName="lung"
			modelFolderPath="/claraDevDay/AIAA/DownloadsFromNGC/clara_pt_covid19_ct_lung_segmentation/models/model.ts"
			configFolderPath="/claraDevDay/AIAA/DownloadsFromNGC/clara_pt_covid19_ct_lung_segmentation/config/config_aiaa.json"
			!AIAA load $modelName config $configFolderPath $modelFolderPath 

6. matlab: opt/MATLAB
7. anaconda: 
		base: python3.9
			pytorch
			pip install monai Successfully installed monai-0.8.1
			pip install monailabel 
			pip install monai-deploy-app-sdk : some errors?
			pip install koila
				只需在第一行代码，也就是把输入用lazy张量wrap起来，并指定bacth维度——koila就能自动帮你计算剩余的GPU内存并使用正确的batch size了。在本例中，batch=0，则修改如下： input = lazy(torch.randn(8, 28, 28), batch=0)完事儿！就这样和PyTorch“炼丹”时的OOM报错说拜拜。
		
		tensorflow: python3.7
			sudo pip install tensorflow  -i https://pypi.tuna.tsinghua.edu.cn/simple

		
		mri :python3.8
			dipy pip install dipy  -i https://pypi.tuna.tsinghua.edu.cn/simple 
					Successfully installed dipy-1.5.0 h5py-3.6.0 nibabel-3.2.2 numpy-1.22.3 packaging-21.3 pyparsing-3.0.8 scipy-1.8.0 tqdm-4.64.0

			conda install -c mrtrix3 mrtrix3

			R: install.packages("devtools")
			rstudio: should be started in terminal
			fae
			matrix3
			fsl
8. pycharm

### mri
9. dpabi: should install docker and install the image
10. fsl
11. afni
12. slicer3D:
13. MricronGL: MRIcroGL
14. lcmodel :    
	a. cd $HOME/.lcmodel
	b. ./lcmgui
15. ants: finished, show download some package from github
	/home/mri/opt/ants/antsbin/bin
16. qsiprep-docker

17. sudo apt install terminator
18. sudo apt install mlocate
19. sudo apt install meld: meld

20. Slicer3D:opt, need qt5 sudo apt-get install qt5-default 

21. sudo apt install cmake
22. sudo apt install aria2: 
	aria2c -i uris.txt
	aria2c http://example.org/mylinux.iso
	aria2c http://a/f.iso ftp://b/f.iso
	aria2c -x2 http://a/f.iso
	aria2c http://example.org/mylinux.torrent
	aria2c 'magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C'
23. 




ubuntu_vmware: sudo apt-get install build-essential
	1. sublime
	2. vscode
		git配置
	3. 共享文件夹：/mnt/hgfs

	4. anaconda
		1) choose python 3.8 version 202105
		2) base for mri
			a) fsl: need python2, install in system enviroment; path: home/peng/opt/fsl;done
			b) ants: home/peng/opt/ants
			c) afni
				pyqt4 (should deactivate anaconda when used in afni)
				sudo apt-get install -y tcsh xfonts-base libssl-dev       \
                        python-is-python3                 \
                        python3-matplotlib                \
                        gsl-bin netpbm gnome-tweak-tool   \
                        libjpeg62 xvfb xterm vim curl     \
                        gedit evince eog                  \
                        libglu1-mesa-dev libglw1-mesa     \
                        libxm4 build-essential            \
                        libcurl4-openssl-dev libxml2-dev  \
                        libgfortran-8-dev libgomp1        \
                        gnome-terminal nautilus           \
                        gnome-icon-theme-symbolic         \
                        firefox xfonts-100dpi             \
                        libgdal-dev libopenblas-dev       \
                        libnode-dev libudunits2-dev       \
                        libgfortran
				sudo apt install r = 4.1.2
				sudo ln -s /usr/lib/x86_64-linux-gnu/libgsl.so.23 /usr/lib/x86_64-linux-gnu/libgsl.so.19
			d) conda install -c mrtrix3 mrtrix3
			e) dipy == 1.4 pip install dipy
			f) qsiprep (not supported in python 3.8 due to vtk 8.1.2)
				Installing qsiprep script to /home/peng/opt/anaconda3/bin
				creat a new env with python3.7
			
			g) freesurfer
			h. philips gpi (should revise .bashrc for QT5)
				importError: /home/peng/opt/anaconda3/envs/gpi_env/lib/python3.8/site-packages/PyQt5/QtCore.abi3.so: undefined symbol: _ZdlPvm, version Qt_5

			i) 
			

	
	5. libqt4 (not  needed in afni) and pyqt4 (should deactivate anaconda when used in afni)

		sudo add-apt-repository ppa:rock-core/qt4
		sudo apt update
		sudo apt install libqt4-dev
		cd ~/Downloads
		wget http://archive.ubuntu.com/ubuntu/pool/universe/q/qt-assistant-compat/libqtassistantclient4_4.6.3-7build1_amd64.deb
		sudo apt-get install ./libqtassistantclient4_4.6.3-7build1_amd64.deb
		wget http://archive.ubuntu.com/ubuntu/pool/universe/p/python-qt4/python-qt4_4.12.1+dfsg-2_amd64.deb
		sudo apt-get install ./python-qt4_4.12.1+dfsg-2_amd64.deb
		wget http://archive.ubuntu.com/ubuntu/pool/universe/p/python-pyaudio/python-pyaudio_0.2.11-1build2_amd64.deb
		sudo apt-get install ./python-pyaudio_0.2.11-1build2_amd64.deb
		sudo apt-get install libcanberra-gtk-module

		sudo add-apt-repository --remove ppa:rock-core/qt4
		sudo apt remove --autoremove libqt4* libqtcore4 libqtgui4 libqtwebkit4 qt4*


	6. slicer3D
		TBD
	7. MITK-DIFF
		a. cannot read data

	8. mrtrix3
		/usr/local/mrtrix3/bin

	9. bart
		success
	100. Deeplearning tools
		setup 
			conda create -n DL python=3.8
			conda install pytorch torchvision torchaudio cpuonly -c pytorch

		a. deepbrain: https://github.com/rcruces/deepbrain
			pip install deepbrain
		b. pip install antspyx


 cmake .. \
-DCMAKE_BUILD_TYPE:STRING=Release   \
-DCMAKE_INSTALL_PREFIX:PATH=/home/peng/opt/minc\
-DMT_BUILD_ABC:BOOL=ON   \
-DMT_BUILD_ANTS:BOOL=ON   \
-DMT_BUILD_C3D:BOOL=ON   \
-DMT_BUILD_ELASTIX:BOOL=ON   \
-DMT_BUILD_IM:BOOL=OFF   \
-DMT_BUILD_ITK_TOOLS:BOOL=ON   \
-DMT_BUILD_LITE:BOOL=OFF   \
-DMT_BUILD_SHARED_LIBS:BOOL=ON   \
-DMT_BUILD_VISUAL_TOOLS:BOOL=ON   \
-DMT_USE_OPENMP:BOOL=ON   \
-DUSE_SYSTEM_FFTW3D:BOOL=OFF   \
-DUSE_SYSTEM_FFTW3F:BOOL=OFF   \
-DUSE_SYSTEM_GLUT:BOOL=OFF   \
-DUSE_SYSTEM_GSL:BOOL=OFF   \
-DUSE_SYSTEM_HDF5:BOOL=OFF   \
-DUSE_SYSTEM_ITK:BOOL=OFF   \
-DUSE_SYSTEM_NETCDF:BOOL=OFF   \
-DUSE_SYSTEM_NIFTI:BOOL=OFF   \
-DUSE_SYSTEM_PCRE:BOOL=OFF   \
-DUSE_SYSTEM_ZLIB:BOOL=OFF